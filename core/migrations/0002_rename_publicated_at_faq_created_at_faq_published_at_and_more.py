# Generated by Django 5.2.4 on 2025-08-01 18:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name="faq",
            old_name="publicated_at",
            new_name="created_at",
        ),
        migrations.AddField(
            model_name="faq",
            name="published_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="faq",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name="AreaOfDuty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("published", "Publicado"),
                            ("not_published", "Não publicado"),
                        ],
                        default="not_published",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("dutie_name", models.TextField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Core",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("published", "Publicado"),
                            ("not_published", "Não publicado"),
                        ],
                        default="not_published",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("core_name", models.TextField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TypeOfService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("published", "Publicado"),
                            ("not_published", "Não publicado"),
                        ],
                        default="not_published",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("service_name", models.TextField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("published", "Publicado"),
                            ("not_published", "Não publicado"),
                        ],
                        default="not_published",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("unit_name", models.CharField(max_length=255)),
                ("url", models.URLField(blank=True, null=True)),
                ("observation", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("name_dp", models.CharField(blank=True, max_length=255, null=True)),
                ("email_dp", models.EmailField(blank=True, max_length=254, null=True)),
                ("cep", models.CharField(max_length=10)),
                ("street", models.CharField(max_length=255)),
                ("district", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("acre", "Acre"),
                            ("alagoas", "Alagoas"),
                            ("amapa", "Amapá"),
                            ("amazonas", "Amazonas"),
                            ("bahia", "Bahia"),
                            ("ceara", "Ceará"),
                            ("distrito_federal", "Distrito Federal"),
                            ("espirito_santo", "Espírito Santo"),
                            ("goias", "Goiás"),
                            ("maranhao", "Maranhão"),
                            ("mato_grosso", "Mato Grosso"),
                            ("mato_grosso_do_sul", "Mato Grosso do Sul"),
                            ("minas_gerais", "Minas Gerais"),
                            ("para", "Pará"),
                            ("paraiba", "Paraíba"),
                            ("parana", "Paraná"),
                            ("pernambuco", "Pernambuco"),
                            ("piaui", "Piauí"),
                            ("rio_de_janeiro", "Rio de Janeiro"),
                            ("rio_grande_do_norte", "Rio Grande do Norte"),
                            ("rio_grande_do_sul", "Rio Grande do Sul"),
                            ("rondonia", "Rondônia"),
                            ("roraima", "Roraima"),
                            ("santa_catarina", "Santa Catarina"),
                            ("sao_paulo", "São Paulo"),
                            ("sergipe", "Sergipe"),
                            ("tocantins", "Tocantins"),
                        ],
                        default="santa_catarina",
                        max_length=255,
                    ),
                ),
                ("phone", models.CharField(max_length=20)),
                ("is_whatsapp", models.BooleanField(default=False)),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("schedules", models.TextField(blank=True, null=True)),
                ("link_schedule_service", models.URLField(blank=True, null=True)),
                ("is_principal", models.BooleanField(default=False)),
                (
                    "area_of_duty",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.areaofduty",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "core",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="core.core",
                    ),
                ),
                (
                    "types_of_service",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.typeofservice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
